<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilNodeIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilNodeIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAC
        CQAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBYAAxIBGQMzAY0DJwG/AyUBwgMlAcIDJQHCAyUBwgMlAcIDJQHCAyUBwgMl
        AcIDJwHAAzMBlAMXASEIAAMSARkDMwGNAycBvwMlAcIDJQHCAyUBwgMlAcIDJQHCAyUBwgMlAcIDJQHC
        AycBwAMzAZQDFwEhhAADFQEeAxIB5gMrAeQDWQG9A1sBugNbAboDWwG6A1sBugNbAboDWwG6A1sBugNb
        AboDWAG8AzEB4AMNAe4DHAEpAxUBHgMSAeYDKwHkA1kBvQNbAboDWwG6A1sBugNbAboDWwG6A1sBugNb
        AboDWwG6A1gBvAMxAeADDQHuAxwBKYAAAzEBnAMvAeEDdAGLA2kBpwN0AYEDdQGAA3UBgAN1AYADdQGA
        A3UBgAN1AYADdQGAA3UBgAN0AYEDOwHYAywBsAMxAZwDLwHhA3QBggN1AYADdQGAA3UBgwNnAawDPAHf
        Az0B5gNhAbQDdAGGA3UBgAN1AYADdAGBAzsB2AMsAbCAAAMeAdIDYAG1A2wBogFsATIBAAH/AVIBPQEo
        AeYDbQGhA3UBgAN1AYADdQGAA3UBgAN1AYADdQGAA3UBgAN1AYADZwGrAxIB5wMeAdIDYAG1A3UBgANz
        AZADUwHDAzMB8wNTAf8DewH/A64B/wOLAf8DRQH4A00BywNxAZcDdQGAA2cBqwMSAeeAAAMcAdYDYgGy
        A3QBhgFyATcBBAH8AekBbQEAAf8BOQEvASYB6AN1AYADdQGAA3UBgAN1AYADdQGAA3UBgAN1AYADdQGA
        A2kBpwMPAesDHAHWA2IBsgNaAb0DOAH+A2oB/wN+Af8DfgH/A34B/wOvAf8DvwH/A78B/wOqAf8DXgH/
        A00B0ANpAacDDwHrgAADHAHWA2IBsgN1AYABVAFMAUcBzwFGAS4BGwHvAVwBMgEMAfgDcgGVA3UBgAN1
        AYADdQGAA3UBgAN1AYADdQGAA3UBgANpAacDDwHrAxwB1gNiAbIDQgHWA34B/wN+Af8DfgH/A34B/wN+
        Af8DrwH/A78B/wO/Af8DvwH/A78B/wNFAesDaQGnAw8B64AAAxwB1gNiAbIDdQGAA3UBgANzAY4BUwEz
        ARMB8wFSATYBHwHvAU8CTgHMA3MBjwN0AYcDZQGuAUgBUAFFAdADbgGgA3QBgQNpAacDDwHrAxwB1gNi
        AbIDQgHWA34B/wN+Af8DfgH/A34B/wN+Af8DrwH/A78B/wO/Af8DvwH/A78B/wNFAesDaQGnAw8B64AA
        AxwB1gNiAbIDdQGAA3UBgAN1AYADZAGvAccBegGAAf8BrgGGAW0B/wENAVYBAAH/AQ0BVgEAAf8BDgFY
        AQAB/wEnAfIBAAH/ARgBmAEAAf8BMwE8ATEB3wNpAacDDwHrAxwB1gNiAbIDQgHWA34B/wN+Af8DfgH/
        A34B/wN+Af8DrwH/A78B/wO/Af8DvwH/A78B/wNFAesDaQGnAw8B64AAAxwB1gNiAbIDdQGAA3UBgAN1
        AYADbQGhAVkBNwFfAf8BTwEyAUIB/gNaAb0DYQG0AT0BPgE9AdcBHQFiAREB9QFMAVIBSwHLA3ABmANp
        AacDDwHrAxwB1gNiAbIDQgHWA34B/wN+Af8DfgH/A34B/wN+Af8DrwH/A78B/wO/Af8DvwH/A78B/wNF
        AesDaQGnAw8B64AAAxwB1gNiAbIDdQGAA3UBgAN1AYADdQGAAiEBYQHrAj0BUwHXA3UBgAN1AYADdAGB
        A3QBggN1AYADdQGAA2kBpwMPAesDHAHWA2IBsgNCAdYDfgH/A34B/wN+Af8DeAH/A4QB/wObAf8DrAH/
        A78B/wO/Af8DvwH/A0UB6wNpAacDDwHrgAADHAHWA2IBsgN1AYADdQGAA3UBgANzAY0CFwFaAfECLQFD
        AeIDdAGHA3UBgAN1AYADdQGAA3UBgAN1AYADaQGnAw8B6wMcAdYDYgGyA0IB1gN7Af8DfAH/A4oB/wOd
        Af8DoAH/A6AB/wOfAf8DmAH/A6UB/wO5Af8DRQHrA2kBpwMPAeuAAAMcAdYDYgGyA3UBgAN1AYADdQGA
        AlQBVQHBAgABuQH/AgABigH/A2cBqwN1AYADdQGAA3UBgAN1AYADdQGAA2kBpwMPAesDHAHWA2IBsgNP
        AckDTgH/A5cB/wOgAf8DoAH/A6AB/wOgAf8DoAH/A6AB/wOUAf8DVwH/AzwB3wNpAacDDwHrgAADHQHU
        A2EBtAN1AYADdQGAA3UBgANyAZICAwGBAf0CEwFeAfMDdQGEA3UBgAN1AYADdQGAA3UBgAN1AYADaAGq
        AxEB6AMdAdQDYQG0A3QBgQNqAaMDPwHbA0EB/wOFAf8DoAH/A5oB/wNpAf8DNQH7Az4B2ANoAaoDdAGF
        A2gBqgMRAeiAAAMwAaMDNwHcA3QBgQN1AYADdQGAA3UBgAJPAVkByAJiAWMBswN1AYADdQGAA3UBgAN1
        AYADdQGAA3UBgANCAdIDKgG3AzABowM3AdwDdAGBA3UBgAN1AYADcgGQA1QBxAM6Ae4DPQHcA2MBsQN0
        AYgDdQGAA3UBgAN1AYADQgHSAyoBt4AAAxoBJgMMAe8DNwHcA2IBswNjAbADYwGwA2MBsANjAbADYwGw
        A2MBsANjAbADYwGwA2IBsgM9AdYDBwH1AyEBMwMaASYDDAHvAzcB3ANiAbMDYwGwA2MBsANjAbADYwGw
        A2MBsANjAbADYwGwA2MBsANiAbIDPQHWAwcB9QMhATOEAAMaASUDMAGiAx0B0wMcAdYDHAHWAxwB1gMc
        AdYDHAHWAxwB1gMcAdYDHAHWAx0B1AMvAagDHwEuCAADGgElAzABogMdAdMDHAHWAxwB1gMcAdYDHAHW
        AxwB1gMcAdYDHAHWAxwB1gMdAdQDLwGoAx8BLoQAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEB
        BQABgBcAA/8BAAGAAQEBgAEBdAABgAEBAYABAQQACw==
</value>
  </data>
</root>
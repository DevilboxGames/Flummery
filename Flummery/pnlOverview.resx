<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilNodeIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilNodeIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD4
        CAAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBYAAxIBGQNDAY0DPAG/AzoBwgM6AcIDOgHCAzoBwgM6AcIDOgHCAzoBwgM6
        AcIDPAHAA0QBlAMYASEIAAMSARkDQwGNAzwBvwM6AcIDOgHCAzoBwgM6AcIDOgHCAzoBwgM6AcIDOgHC
        AzwBwANEAZQDGAEhhAADFgEeAyAB5gM1AeQDWQG9A1kBugNZAboDWQG6A1kBugNZAboDWQG6A1kBugNZ
        AboDWAG8AzsB4AMXAe4DHQEpAxYBHgMgAeYDNQHkA1kBvQNZAboDWQG6A1kBugNZAboDWQG6A1kBugNZ
        AboDWQG6A1gBvAM7AeADFwHuAx0BKYAAA0QBnAM6AeEDVgGLA10BpwNSAYEDUgGAA1IBgANSAYADUgGA
        A1IBgANSAYADUgGAA1IBgANSAYEDRQHYA0EBsANEAZwDOgHhA1IBggNSAYADUgGAA1MBgwNdAawDQwHf
        A0MB5gNcAbQDVAGGA1IBgANSAYADUgGBA0UB2ANBAbCAAAMyAdIDWwG1A10BogFrATEBAAH/AVUBQwEy
        AeYDXQGhA1IBgANSAYADUgGAA1IBgANSAYADUgGAA1IBgANSAYADXAGrAx8B5wMyAdIDWwG1A1IBgANY
        AZADVgHDAzgB8wNSAf8DegH/A64B/wOLAf8DRQH4A1IBywNaAZcDUgGAA1wBqwMfAeeAAAMvAdYDXAGy
        A1QBhgFxATYBBQH8AekBbAEAAf8BQAE4ATAB6ANSAYADUgGAA1IBgANSAYADUgGAA1IBgANSAYADUgGA
        A10BpwMcAesDLwHWA1wBsgNaAb0DOAH+A2kB/wN9Af8DfQH/A30B/wOvAf8DvwH/A78B/wOqAf8DXQH/
        A1IB0ANdAacDHAHrgAADLwHWA1wBsgNSAYABVgFSAU8BzwFJATMBIgHvAVwBNQERAfgDWgGVA1IBgANS
        AYADUgGAA1IBgANSAYADUgGAA1IBgANdAacDHAHrAy8B1gNcAbIDSgHWA30B/wN9Af8DfQH/A30B/wN9
        Af8DrwH/A78B/wO/Af8DvwH/A78B/wNKAesDXQGnAxwB64AAAy8B1gNcAbIDUgGAA1IBgANXAY4BUwE4
        ARkB8wFUATsBJgHvA1IBzANYAY8DVAGHA10BrgFPAVMBTAHQA1wBoANSAYEDXQGnAxwB6wMvAdYDXAGy
        A0oB1gN9Af8DfQH/A30B/wN9Af8DfQH/A68B/wO/Af8DvwH/A78B/wO/Af8DSgHrA10BpwMcAeuAAAMv
        AdYDXAGyA1IBgANSAYADUgGAA1wBrwHHAXkBgAH/Aa4BhgFsAf8BDAFVAQAB/wEMAVUBAAH/AQ0BVwEA
        Af8BJgHyAQAB/wEXAZgBAAH/AT0BQwE8Ad8DXQGnAxwB6wMvAdYDXAGyA0oB1gN9Af8DfQH/A30B/wN9
        Af8DfQH/A68B/wO/Af8DvwH/A78B/wO/Af8DSgHrA10BpwMcAeuAAAMvAdYDXAGyA1IBgANSAYADUgGA
        A10BoQFYATYBXgH/AU8BMgFCAf4DWgG9A1wBtANGAdcBIgFgARYB9QFSAVQBUQHLA1oBmANdAacDHAHr
        Ay8B1gNcAbIDSgHWA30B/wN9Af8DfQH/A30B/wN9Af8DrwH/A78B/wO/Af8DvwH/A78B/wNKAesDXQGn
        AxwB64AAAy8B1gNcAbIDUgGAA1IBgANSAYADUgGAAioBYAHrAkYBVgHXA1IBgANSAYADUgGBA1IBggNS
        AYADUgGAA10BpwMcAesDLwHWA1wBsgNKAdYDfQH/A30B/wN9Af8DdwH/A4QB/wObAf8DrAH/A78B/wO/
        Af8DvwH/A0oB6wNdAacDHAHrgAADLwHWA1wBsgNSAYADUgGAA1IBgANXAY0CIAFaAfECOAFIAeIDVAGH
        A1IBgANSAYADUgGAA1IBgANSAYADXQGnAxwB6wMvAdYDXAGyA0oB1gN6Af8DewH/A4oB/wOdAf8DoAH/
        A6AB/wOfAf8DmAH/A6UB/wO5Af8DSgHrA10BpwMcAeuAAAMvAdYDXAGyA1IBgANSAYADUgGAA1YBwQIA
        AbkB/wIAAYoB/wNcAasDUgGAA1IBgANSAYADUgGAA1IBgANdAacDHAHrAy8B1gNcAbIDUwHJA00B/wOX
        Af8DoAH/A6AB/wOgAf8DoAH/A6AB/wOgAf8DlAH/A1YB/wNDAd8DXQGnAxwB64AAAzAB1ANcAbQDUgGA
        A1IBgANSAYADWAGSAgQBgQH9AhkBXgHzA1QBhANSAYADUgGAA1IBgANSAYADUgGAA1wBqgMeAegDMAHU
        A1wBtANSAYEDXAGjA0cB2wNAAf8DhQH/A6AB/wOaAf8DaAH/AzQB+wNHAdgDXAGqA1QBhQNcAaoDHgHo
        gAADRAGjA0EB3ANSAYEDUgGAA1IBgANSAYACVAFaAcgDXAGzA1IBgANSAYADUgGAA1IBgANSAYADUgGA
        A0oB0gM/AbcDRAGjA0EB3ANSAYEDUgGAA1IBgANYAZADVwHEAz4B7gNGAdwDXQGxA1UBiANSAYADUgGA
        A1IBgANKAdIDPwG3gAADGwEmAxUB7wNBAdwDXAGzA1wBsANcAbADXAGwA1wBsANcAbADXAGwA1wBsANc
        AbADXAGyA0YB1gMOAfUDIwEzAxsBJgMVAe8DQQHcA1wBswNcAbADXAGwA1wBsANcAbADXAGwA1wBsANc
        AbADXAGwA1wBsgNGAdYDDgH1AyMBM4QAAxoBJQNDAaIDMQHTAy8B1gMvAdYDLwHWAy8B1gMvAdYDLwHW
        Ay8B1gMvAdYDMAHUA0MBqAMgAS4IAAMaASUDQwGiAzEB0wMvAdYDLwHWAy8B1gMvAdYDLwHWAy8B1gMv
        AdYDLwHWAzAB1ANDAagDIAEuhAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEA
        AYABAQGAAQF0AAGAAQEBgAEBBAAL
</value>
  </data>
</root>